// –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û API DEEPSEEK
// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É API –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –ë–î –±–µ–∑ system_prompt

import { createClient } from '@supabase/supabase-js'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const SUPABASE_URL = 'https://hfqgcaxmufzitdfafdlp.supabase.co'
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhmcWdjYXhtdWZ6aXRkZmFmZGxwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ4OTI5MjMsImV4cCI6MjA3MDQ2ODkyM30.XnOEKdwZdJM-DilhrjZ7PdzHU2rx3L72oQ1rJYo5pXc'

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY)

// –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Deepseek API (–∫–æ–ø–∏—è –∏–∑ deepseek-api.ts)
const DEEPSEEK_CONFIG = {
  BASE_URL: 'https://api.deepseek.com',
  DEFAULT_MODEL: 'deepseek-chat',
  DEFAULT_TEMPERATURE: 0.7,
  DEFAULT_MAX_TOKENS: 1000,
  TIMEOUT_MS: 30000,
}

// –§—É–Ω–∫—Ü–∏—è getSettings —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ (–∫–æ–ø–∏—è –ª–æ–≥–∏–∫–∏)
async function getSettings() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é getSettings...')

  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —è–≤–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π –≤–º–µ—Å—Ç–æ * –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –ë–î –±–µ–∑ system_prompt
    const { data, error } = await supabase
      .from('deepseek_settings')
      .select('id, api_key, base_url, model, enabled, temperature, max_tokens, created_at, updated_at')
      .single()

    if (error && error.code !== 'PGRST116') {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error)
      throw error
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    if (!data) {
      console.log('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
      return {
        id: '',
        api_key: '',
        base_url: DEEPSEEK_CONFIG.BASE_URL,
        model: DEEPSEEK_CONFIG.DEFAULT_MODEL,
        enabled: false,
        temperature: DEEPSEEK_CONFIG.DEFAULT_TEMPERATURE,
        max_tokens: DEEPSEEK_CONFIG.DEFAULT_MAX_TOKENS,
        system_prompt: undefined,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      }
    }

    console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:', Object.keys(data))

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å system_prompt –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    let systemPrompt = undefined
    try {
      console.log('üîç –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å system_prompt...')
      const { data: promptData } = await supabase
        .from('deepseek_settings')
        .select('system_prompt')
        .eq('id', data.id)
        .single()

      systemPrompt = promptData?.system_prompt || undefined
      console.log('‚úÖ system_prompt –ø–æ–ª—É—á–µ–Ω:', systemPrompt ? '–ï–°–¢–¨' : '–ù–ï–¢')
    } catch (promptError) {
      console.log('‚ö†Ô∏è system_prompt –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ë–î –±–µ–∑ —ç—Ç–æ–≥–æ –ø–æ–ª—è)')
    }

    const result = {
      ...data,
      system_prompt: systemPrompt
    }

    console.log('üìã –ò—Ç–æ–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', Object.keys(result))
    return result

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è upsertSettings —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
async function testUpsertSettings() {
  console.log('\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é upsertSettings...')

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const { data: existing } = await supabase
      .from('deepseek_settings')
      .select('id')
      .single()

    if (!existing) {
      console.log('‚ùå –ù–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
      return false
    }

    console.log('‚úÖ –ù–∞–π–¥–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å ID:', existing.id)

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const testInput = {
      temperature: 0.8,
      max_tokens: 1500,
      system_prompt: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏'
    }

    // –ò—Å–∫–ª—é—á–∞–µ–º system_prompt –∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const { system_prompt, ...inputWithoutPrompt } = testInput

    // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–±–µ–∑ system_prompt)
    const dataToSave = {
      ...inputWithoutPrompt,
      updated_at: new Date().toISOString()
    }

    console.log('üì§ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–±–µ–∑ system_prompt):', Object.keys(dataToSave))

    const query = supabase.from('deepseek_settings')
    const { data, error } = await query
      .update(dataToSave)
      .eq('id', existing.id)
      .select()
      .single()

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error)
      return false
    }

    console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å system_prompt –æ—Ç–¥–µ–ª—å–Ω–æ
    if (system_prompt !== undefined && data?.id) {
      try {
        console.log('üîß –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å system_prompt...')
        await supabase
          .from('deepseek_settings')
          .update({ system_prompt })
          .eq('id', data.id)

        console.log('‚úÖ system_prompt —Å–æ—Ö—Ä–∞–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ')
      } catch (promptError) {
        console.log('‚ö†Ô∏è system_prompt –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω (–ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ë–î)')
      }
    }

    console.log('‚úÖ –¢–µ—Å—Ç upsertSettings –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ')
    return true

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ upsertSettings:', error)
    return false
  }
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
async function runTests() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ Deepseek API...\n')

  try {
    // –¢–µ—Å—Ç 1: getSettings
    const settings = await getSettings()
    console.log('üìã –ü–æ–ª—É—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', {
      id: settings.id ? '–ï–°–¢–¨' : '–ù–ï–¢',
      api_key: settings.api_key ? '–ï–°–¢–¨' : '–ù–ï–¢',
      enabled: settings.enabled,
      system_prompt: settings.system_prompt ? '–ï–°–¢–¨' : '–ù–ï–¢'
    })

    // –¢–µ—Å—Ç 2: upsertSettings
    const upsertSuccess = await testUpsertSettings()

    console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–û–í:')
    console.log('‚úÖ getSettings: –†–ê–ë–û–¢–ê–ï–¢')
    console.log(`${upsertSuccess ? '‚úÖ' : '‚ùå'} upsertSettings: ${upsertSuccess ? '–†–ê–ë–û–¢–ê–ï–¢' : '–û–®–ò–ë–ö–ê'}`)

    if (upsertSuccess) {
      console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!')
      console.log('‚úÖ API —Å–æ–≤–º–µ—Å—Ç–∏–º —Å –ë–î –±–µ–∑ –ø–æ–ª—è system_prompt')
      console.log('‚úÖ UI –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
    } else {
      console.log('\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å upsertSettings')
    }

  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error)
  }

  console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
}

// –ó–∞–ø—É—Å–∫
runTests()