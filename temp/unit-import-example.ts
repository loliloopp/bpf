// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è unitMatcher –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
// –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø–æ —Å–∏–Ω–æ–Ω–∏–º–∞–º

import { unitMatcher, type UnitMatch } from '@/entities/units'

/**
 * –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
 */
async function processExcelRowWithUnits(excelRow: any) {
  // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤ Excel –µ—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∞ —Å –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è
  const unitText = excelRow['–ï–¥. –∏–∑–º.'] || excelRow['–ï–¥–∏–Ω–∏—Ü–∞'] || excelRow['Unit'] || ''

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º unitMatcher –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –µ–¥–∏–Ω–∏—Ü—ã
  const unitMatch: UnitMatch = await unitMatcher.findUnit(unitText)

  switch (unitMatch.confidence) {
    case 'exact':
      console.log(`‚úÖ –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: "${unitMatch.originalText}" ‚Üí ${unitMatch.unit?.name}`) // LOG
      break
    case 'synonym':
      console.log(`üîÑ –ù–∞–π–¥–µ–Ω —Å–∏–Ω–æ–Ω–∏–º: "${unitMatch.originalText}" ‚Üí ${unitMatch.unit?.name}`) // LOG
      break
    case 'fuzzy':
      console.log(`üîç –ù–µ—á–µ—Ç–∫–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: "${unitMatch.originalText}" ‚Üí ${unitMatch.unit?.name}`) // LOG
      break
    case 'none':
      console.warn(`‚ö†Ô∏è –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: "${unitMatch.originalText}"`) // LOG
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –µ–¥–∏–Ω–∏—Ü—ã –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      break
  }

  return {
    ...excelRow,
    unit_id: unitMatch.unit?.id || null,
    unit_name: unitMatch.unit?.name || unitMatch.originalText,
    unit_match_confidence: unitMatch.confidence
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä –º–∞—Å—Å–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–∞
 */
async function processExcelImport(excelData: any[]) {
  console.log('üöÄ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ —Å –ø–æ–∏—Å–∫–æ–º –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è') // LOG

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º matcher (–∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –µ–¥–∏–Ω–∏—Ü –∏ —Å–∏–Ω–æ–Ω–∏–º–æ–≤)
  await unitMatcher.initialize()

  const stats = unitMatcher.getStats()
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ UnitMatcher:`, stats) // LOG

  const processedData = []
  const unitMatchStats = {
    exact: 0,
    synonym: 0,
    fuzzy: 0,
    none: 0
  }

  for (let i = 0; i < excelData.length; i++) {
    const row = excelData[i]
    console.log(`üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ ${i + 1}/${excelData.length}`) // LOG

    const processedRow = await processExcelRowWithUnits(row)
    processedData.push(processedRow)

    // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    if (processedRow.unit_match_confidence) {
      unitMatchStats[processedRow.unit_match_confidence]++
    }
  }

  console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è:') // LOG
  console.log(`  ‚úÖ –¢–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è: ${unitMatchStats.exact}`) // LOG
  console.log(`  üîÑ –ù–∞–π–¥–µ–Ω–æ –ø–æ —Å–∏–Ω–æ–Ω–∏–º–∞–º: ${unitMatchStats.synonym}`) // LOG
  console.log(`  üîç –ù–µ—á–µ—Ç–∫–∏–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è: ${unitMatchStats.fuzzy}`) // LOG
  console.log(`  ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ: ${unitMatchStats.none}`) // LOG

  return {
    processedData,
    stats: unitMatchStats
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π handleImport
 */
export async function enhancedHandleImport(file: File) {
  try {
    // 1. –ü–∞—Ä—Å–∏–Ω–≥ Excel —Ñ–∞–π–ª–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ª–æ–≥–∏–∫—É)
    const excelData = await parseExcelFile(file)

    // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –µ–¥–∏–Ω–∏—Ü
    const { processedData, stats } = await processExcelImport(excelData)

    // 3. –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    const validData = processedData.filter(row => row.unit_id !== null)
    const invalidData = processedData.filter(row => row.unit_id === null)

    if (invalidData.length > 0) {
      console.warn(`‚ö†Ô∏è ${invalidData.length} —Å—Ç—Ä–æ–∫ —Å –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–º–∏ –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è`) // LOG
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü
      // –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–æ–∑–¥–∞—Ç—å —Å–∏–Ω–æ–Ω–∏–º—ã –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –µ–¥–∏–Ω–∏—Ü—ã
    }

    // 4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ª–æ–≥–∏–∫—É)
    await saveImportData(validData)

    return {
      success: true,
      imported: validData.length,
      failed: invalidData.length,
      unitMatchStats: stats
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', error) // LOG
    throw error
  }
}

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
async function parseExcelFile(file: File): Promise<any[]> {
  // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ Excel
  return []
}

async function saveImportData(data: any[]): Promise<void> {
  // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î
}

/*
–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:

1. –í —Ñ–∞–π–ª–∞—Ö –∏–º–ø–æ—Ä—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –®–∞—Ö–º–∞—Ç–∫–µ) –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ unitMatcher:
   import { unitMatcher } from '@/entities/units'

2. –í —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ Excel –¥–æ–±–∞–≤—å—Ç–µ:
   const unitMatch = await unitMatcher.findUnit(rowData.unit_text)
   const unitId = unitMatch.unit?.id

3. –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –º–∞—Å—Å–æ–≤–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –≤—ã–∑–æ–≤–∏—Ç–µ:
   await unitMatcher.initialize()

4. –î–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
   const stats = unitMatcher.getStats()

5. –î–ª—è —Å–±—Ä–æ—Å–∞ –∫—ç—à–∞ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∏–Ω–æ–Ω–∏–º–æ–≤:
   unitMatcher.reset()

–ü–†–ò–ú–ï–†–´ –°–û–ü–û–°–¢–ê–í–õ–ï–ù–ò–Ø:
- "–º2" ‚Üí –Ω–∞–π–¥–µ—Ç "–º¬≤" –ø–æ —Å–∏–Ω–æ–Ω–∏–º—É
- "–∫–≤.–º" ‚Üí –Ω–∞–π–¥–µ—Ç "–º¬≤" –ø–æ —Å–∏–Ω–æ–Ω–∏–º—É
- "–∫—É–±.–º" ‚Üí –Ω–∞–π–¥–µ—Ç "–º¬≥" –ø–æ —Å–∏–Ω–æ–Ω–∏–º—É
- "–∫–∏–ª–æ–≥—Ä–∞–º–º" ‚Üí –Ω–∞–π–¥–µ—Ç "–∫–≥" –ø–æ —Å–∏–Ω–æ–Ω–∏–º—É
- "–º¬≤" ‚Üí —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
- "—Ç–æ–Ω–Ω" ‚Üí –Ω–∞–π–¥–µ—Ç "—Ç" –ø–æ —Å–∏–Ω–æ–Ω–∏–º—É
*/