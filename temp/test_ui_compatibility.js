// –¢–ï–°–¢ –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò UI –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú API
// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–∂–µ—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑ –æ—à–∏–±–æ–∫

import { createClient } from '@supabase/supabase-js'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const SUPABASE_URL = 'https://hfqgcaxmufzitdfafdlp.supabase.co'
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhmcWdjYXhtdWZ6aXRkZmFmZGxwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ4OTI5MjMsImV4cCI6MjA3MDQ2ODkyM30.XnOEKdwZdJM-DilhrjZ7PdzHU2rx3L72oQ1rJYo5pXc'

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY)

// –≠–º—É–ª—è—Ü–∏—è TanStack Query –¥–ª—è getSettings
async function simulateQueryFn() {
  console.log('üß™ –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã TanStack Query –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Deepseek...')

  try {
    // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ deepseek-api.ts
    const { data, error } = await supabase
      .from('deepseek_settings')
      .select('id, api_key, base_url, model, enabled, temperature, max_tokens, created_at, updated_at')
      .single()

    if (error && error.code !== 'PGRST116') {
      console.error('‚ùå –û—à–∏–±–∫–∞ Query:', error)
      throw error
    }

    if (!data) {
      console.log('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º default')
      return {
        id: '',
        api_key: '',
        base_url: 'https://api.deepseek.com',
        model: 'deepseek-chat',
        enabled: false,
        temperature: 0.7,
        max_tokens: 1000,
        system_prompt: undefined,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      }
    }

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ')

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å system_prompt –æ—Ç–¥–µ–ª—å–Ω–æ
    let systemPrompt = undefined
    try {
      const { data: promptData } = await supabase
        .from('deepseek_settings')
        .select('system_prompt')
        .eq('id', data.id)
        .single()

      systemPrompt = promptData?.system_prompt || undefined
    } catch (promptError) {
      console.log('‚ÑπÔ∏è system_prompt –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)')
    }

    const result = {
      ...data,
      system_prompt: systemPrompt
    }

    console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è UI:', {
      id: result.id ? '–ï–°–¢–¨' : '–ù–ï–¢',
      api_key: result.api_key ? '–ï–°–¢–¨' : '–ù–ï–¢',
      base_url: result.base_url,
      model: result.model,
      enabled: result.enabled,
      temperature: result.temperature,
      max_tokens: result.max_tokens,
      system_prompt: result.system_prompt || '–ü–£–°–¢–û–ï'
    })

    return result

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ Query:', error)
    throw error
  }
}

// –≠–º—É–ª—è—Ü–∏—è Mutation –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
async function simulateMutationFn(input) {
  console.log('\nüß™ –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã TanStack Mutation –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...')
  console.log('üì§ –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', Object.keys(input))

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
    const { data: existing } = await supabase
      .from('deepseek_settings')
      .select('id')
      .single()

    if (!existing) {
      console.log('‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è')
      return null
    }

    // –ò—Å–∫–ª—é—á–∞–µ–º system_prompt –∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const { system_prompt, ...inputWithoutPrompt } = input

    // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    const dataToSave = {
      ...inputWithoutPrompt,
      updated_at: new Date().toISOString()
    }

    console.log('üì§ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—è:', Object.keys(dataToSave))

    const { data, error } = await supabase
      .from('deepseek_settings')
      .update(dataToSave)
      .eq('id', existing.id)
      .select()
      .single()

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ Mutation:', error)
      throw error
    }

    console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')

    // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å system_prompt –æ—Ç–¥–µ–ª—å–Ω–æ
    if (system_prompt !== undefined && data?.id) {
      try {
        await supabase
          .from('deepseek_settings')
          .update({ system_prompt })
          .eq('id', data.id)

        console.log('‚úÖ system_prompt —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
      } catch (promptError) {
        console.log('‚ö†Ô∏è system_prompt –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω (–ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)')
      }
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å system_prompt –¥–ª—è UI
    const result = {
      ...data,
      system_prompt: system_prompt || undefined
    }

    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç Mutation:', Object.keys(result))
    return result

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ Mutation:', error)
    throw error
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã React —Ñ–æ—Ä–º—ã
async function simulateFormSubmission() {
  console.log('\nüß™ –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã React...')

  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã (–≤–∫–ª—é—á–∞—è system_prompt)
  const formData = {
    api_key: 'sk-test12345',
    base_url: 'https://api.deepseek.com',
    model: 'deepseek-chat',
    enabled: true,
    temperature: 0.8,
    max_tokens: 1200,
    system_prompt: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∏–∑ —Ñ–æ—Ä–º—ã'
  }

  console.log('üìù –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', Object.keys(formData))

  try {
    const result = await simulateMutationFn(formData)
    if (result) {
      console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
      return true
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã')
      return false
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error)
    return false
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testUICompatibility() {
  console.log('üé≠ –¢–ï–°–¢ –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò UI –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú API\n')

  try {
    console.log('=== –¢–ï–°–¢ 1: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (Query) ===')
    const settings = await simulateQueryFn()

    console.log('\n=== –¢–ï–°–¢ 2: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (Mutation) ===')
    const formSuccess = await simulateFormSubmission()

    console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:')
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: –†–ê–ë–û–¢–ê–ï–¢`)
    console.log(`${formSuccess ? '‚úÖ' : '‚ùå'} –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã: ${formSuccess ? '–†–ê–ë–û–¢–ê–ï–¢' : '–û–®–ò–ë–ö–ê'}`)

    if (formSuccess) {
      console.log('\nüéâ UI –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–í–ú–ï–°–¢–ò–ú!')
      console.log('‚úÖ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫')
      console.log('‚úÖ –ü–æ–ª–µ system_prompt –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
      console.log('‚úÖ –§–æ—Ä–º–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π')
    } else {
      console.log('\n‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨–Æ')
    }

  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò:', error)
  }

  console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω')
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testUICompatibility()