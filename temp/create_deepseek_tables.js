// –°–û–ó–î–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶ DEEPSEEK –í SUPABASE
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ Supabase JavaScript –∫–ª–∏–µ–Ω—Ç

import { createClient } from '@supabase/supabase-js'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const SUPABASE_URL = 'https://hfqgcaxmufzitdfafdlp.supabase.co'
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhmcWdjYXhtdWZ6aXRkZmFmZGxwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ4OTI5MjMsImV4cCI6MjA3MDQ2ODkyM30.XnOEKdwZdJM-DilhrjZ7PdzHU2rx3L72oQ1rJYo5pXc'

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY)

// SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
const createTablesSQL = `
-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ Deepseek
CREATE TABLE IF NOT EXISTS deepseek_settings (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  api_key TEXT NOT NULL DEFAULT '',
  base_url TEXT NOT NULL DEFAULT 'https://api.deepseek.com',
  model TEXT NOT NULL DEFAULT 'deepseek-chat',
  enabled BOOLEAN NOT NULL DEFAULT false,
  temperature DECIMAL(3,2) NOT NULL DEFAULT 0.7,
  max_tokens INTEGER NOT NULL DEFAULT 1000,
  system_prompt TEXT,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
CREATE TABLE IF NOT EXISTS deepseek_usage_stats (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  requests_count INTEGER NOT NULL DEFAULT 0,
  tokens_input INTEGER NOT NULL DEFAULT 0,
  tokens_output INTEGER NOT NULL DEFAULT 0,
  total_cost DECIMAL(10,6) NOT NULL DEFAULT 0,
  successful_requests INTEGER NOT NULL DEFAULT 0,
  failed_requests INTEGER NOT NULL DEFAULT 0,
  last_request_at TIMESTAMPTZ,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);
`

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
async function createDeepseekTables() {
  console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü Deepseek...')

  try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—ã
    const { data, error } = await supabase.rpc('exec_sql', {
      sql: createTablesSQL
    })

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü:', error)
      return false
    }

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã Deepseek —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    await checkTables()

    // –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏
    await createInitialRecords()

    return true
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü:', error)
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
async function checkTables() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü...')

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const { data: settingsData, error: settingsError } = await supabase
      .from('deepseek_settings')
      .select('count')
      .limit(1)

    if (settingsError) {
      console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ deepseek_settings –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', settingsError.message)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ deepseek_settings –¥–æ—Å—Ç—É–ø–Ω–∞')
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const { data: statsData, error: statsError } = await supabase
      .from('deepseek_usage_stats')
      .select('count')
      .limit(1)

    if (statsError) {
      console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ deepseek_usage_stats –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', statsError.message)
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ deepseek_usage_stats –¥–æ—Å—Ç—É–ø–Ω–∞')
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü:', error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
async function createInitialRecords() {
  console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π...')

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    const { data: existing } = await supabase
      .from('deepseek_settings')
      .select('id')
      .limit(1)

    if (!existing || existing.length === 0) {
      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      const { error: settingsError } = await supabase
        .from('deepseek_settings')
        .insert({
          api_key: '',
          base_url: 'https://api.deepseek.com',
          model: 'deepseek-chat',
          enabled: false,
          temperature: 0.7,
          max_tokens: 1000,
          system_prompt: null
        })

      if (settingsError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', settingsError)
      } else {
        console.log('‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã')
      }
    } else {
      console.log('‚ÑπÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç')
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const { data: existingStats } = await supabase
      .from('deepseek_usage_stats')
      .select('id')
      .limit(1)

    if (!existingStats || existingStats.length === 0) {
      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      const { error: statsError } = await supabase
        .from('deepseek_usage_stats')
        .insert({
          requests_count: 0,
          tokens_input: 0,
          tokens_output: 0,
          total_cost: 0,
          successful_requests: 0,
          failed_requests: 0
        })

      if (statsError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsError)
      } else {
        console.log('‚úÖ –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞')
      }
    } else {
      console.log('‚ÑπÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:', error)
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createDeepseekTables()
  .then((success) => {
    if (success) {
      console.log('üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –¢–∞–±–ª–∏—Ü—ã Deepseek —Å–æ–∑–¥–∞–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.')
      console.log('üìã –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è:')
      console.log('   - deepseek_settings (—Å –ø–æ–ª–µ–º system_prompt)')
      console.log('   - deepseek_usage_stats')
      console.log('   - –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã')
    }
  })
  .catch((error) => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
  })