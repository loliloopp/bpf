// –¢–ï–°–¢ API DEEPSEEK
// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ Supabase API

import { createClient } from '@supabase/supabase-js'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const SUPABASE_URL = 'https://hfqgcaxmufzitdfafdlp.supabase.co'
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhmcWdjYXhtdWZ6aXRkZmFmZGxwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ4OTI5MjMsImV4cCI6MjA3MDQ2ODkyM30.XnOEKdwZdJM-DilhrjZ7PdzHU2rx3L72oQ1rJYo5pXc'

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY)

async function testTables() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü Deepseek...')
  console.log(`üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: ${SUPABASE_URL}`)

  // –¢–µ—Å—Ç 1: deepseek_settings
  console.log('\n--- –¢–µ—Å—Ç —Ç–∞–±–ª–∏—Ü—ã deepseek_settings ---')
  try {
    const { data, error } = await supabase
      .from('deepseek_settings')
      .select('*')
      .limit(1)

    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.message)
      console.log('   –ö–æ–¥:', error.code)
      console.log('   –î–µ—Ç–∞–ª–∏:', error.details)

      if (error.code === '42P01') {
        console.log('üìù –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å')
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞')
      console.log('üìã –î–∞–Ω–Ω—ã–µ:', data)

      if (data && data.length > 0) {
        const columns = Object.keys(data[0])
        console.log('üìÑ –ü–æ–ª—è:', columns.join(', '))
        console.log('üîç system_prompt:', columns.includes('system_prompt') ? '‚úÖ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
      }
    }
  } catch (err) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err.message)
  }

  // –¢–µ—Å—Ç 2: deepseek_usage_stats
  console.log('\n--- –¢–µ—Å—Ç —Ç–∞–±–ª–∏—Ü—ã deepseek_usage_stats ---')
  try {
    const { data, error } = await supabase
      .from('deepseek_usage_stats')
      .select('*')
      .limit(1)

    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.message)
      console.log('   –ö–æ–¥:', error.code)
      console.log('   –î–µ—Ç–∞–ª–∏:', error.details)

      if (error.code === '42P01') {
        console.log('üìù –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å')
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞')
      console.log('üìã –î–∞–Ω–Ω—ã–µ:', data)

      if (data && data.length > 0) {
        const columns = Object.keys(data[0])
        console.log('üìÑ –ü–æ–ª—è:', columns.join(', '))
      }
    }
  } catch (err) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err.message)
  }

  // –¢–µ—Å—Ç 3: –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
  console.log('\n--- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ ---')
  try {
    const { data, error } = await supabase
      .from('chessboard')
      .select('count')
      .limit(1)

    if (error) {
      console.log('‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º:', error.message)
    } else {
      console.log('‚úÖ –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç')
    }
  } catch (err) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err.message)
  }

  console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testTables()