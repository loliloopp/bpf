import React, { useMemo, useCallback, useState, useRef, useLayoutEffect, useDeferredValue } from 'react'
import { Table } from 'antd'
import { useTableHeight } from '../hooks/useTableHeight'

interface SmartTableOptimizerProps {
  data: any[]
  columns: any[]
  displayLimit: number
  performanceMode: boolean
  // –ù–æ–≤—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –≥–ª—É–±–æ–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  enableDeepMemo?: boolean
  chunkSize?: number
  lazyRendering?: boolean
  // –û–ø—Ü–∏–∏ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤—ã—Å–æ—Ç—ã —Ç–∞–±–ª–∏—Ü—ã
  useAdaptiveHeight?: boolean
  controlsHeight?: number
  // –ü—Ä–æ–ø—Å—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
  rowsPerPage?: number
  onRowsPerPageChange?: (value: number) => void
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ render —Ñ—É–Ω–∫—Ü–∏–π
  editingRows?: Record<string, any>
  [key: string]: any // –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã Table
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ —Å—Ç—Ä–æ–∫–∏
const createStableRowKey = (() => {
  const keyCache = new WeakMap<any, string>()
  let keyCounter = 0

  return (record: any): string => {
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    if (record.key) return String(record.key)
    if (record.id) return String(record.id)

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
    if (keyCache.has(record)) {
      return keyCache.get(record)!
    }

    // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∫–ª—é—á –±–µ–∑ index
    const key = `row-${keyCounter++}-${Date.now()}`
    keyCache.set(record, key)
    return key
  }
})()

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è Select –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const deepMemoColumns = (() => {
  const columnsCache = new WeakMap<any[], any[]>()

  return (columns: any[], performanceMode: boolean): any[] => {
    if (!performanceMode) {
      if (columnsCache.has(columns)) {
        return columnsCache.get(columns)!
      }
      columnsCache.set(columns, columns)
      return columns
    }

    // –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–ø—Ä–æ—â–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏, –ù–û —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ render —Ñ—É–Ω–∫—Ü–∏–∏
    const optimized = columns.map((col: any) => ({
      ...col,
      // –û—Ç–∫–ª—é—á–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
      filters: undefined,
      filterDropdown: undefined,
      filterIcon: undefined,
      // –£–ø—Ä–æ—â–∞–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤
      sorter: (col.sorter === true || typeof col.sorter === 'function') ? true : false,
      // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º render —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è Select –ø–æ–ª–µ–π + –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ
      render: (['actions', 'comments', 'checkbox', 'tagName', 'unit', 'costCategory', 'costType', 'location', 'workName', 'material'].includes(col.dataIndex) || col.key === 'actions')
        ? col.render
        : undefined,
    }))

    if (columnsCache.has(columns)) {
      const cached = columnsCache.get(columns)!
      // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–µ–∑ JSON.stringify –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫
      if (cached.length === optimized.length &&
          cached.every((col, i) => col.dataIndex === optimized[i]?.dataIndex &&
                                   col.title === optimized[i]?.title &&
                                   col.width === optimized[i]?.width)) {
        return cached
      }
    }

    columnsCache.set(columns, optimized)
    return optimized
  }
})()

const SmartTableOptimizer: React.FC<SmartTableOptimizerProps> = ({
  data,
  columns,
  displayLimit,
  performanceMode,
  enableDeepMemo = true,
  chunkSize = 50,
  lazyRendering = false,
  useAdaptiveHeight = true,
  controlsHeight = 56,
  rowsPerPage = 50,
  onRowsPerPageChange,
  editingRows = {},
  ...tableProps
}) => {
  // –£–±—Ä–∞–Ω –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –ª–æ–≥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const [isReady, setIsReady] = useState(!lazyRendering)
  const previousDataRef = useRef<any[]>([])
  const frameRef = useRef<number>()

  // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑—É–µ–º useDeferredValue –¥–ª—è –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
  const deferredData = useDeferredValue(data)
  const deferredEditingRows = useDeferredValue(editingRows)

  // –£–±—Ä–∞–Ω–æ –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ editingRows –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –≤—ã—Å–æ—Ç—ã —Ç–∞–±–ª–∏—Ü—ã
  const { tableHeight } = useTableHeight({
    controlsHeight,
    minHeight: 300,
  })

  // Lazy rendering - –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useLayoutEffect(() => {
    if (lazyRendering && !isReady) {
      frameRef.current = requestAnimationFrame(() => {
        setIsReady(true)
      })
    }

    return () => {
      if (frameRef.current) {
        cancelAnimationFrame(frameRef.current)
      }
    }
  }, [lazyRendering, isReady])

  // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø 1: –ñ–Å–°–¢–ö–û–ï –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const limitedData = useMemo(() => {
    // –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (>100 —Å—Ç—Ä–æ–∫) –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–ø–∞–º–∞
    if (Math.abs(deferredData.length - previousDataRef.current.length) > 100) {
      if (process.env.NODE_ENV === 'development') { // LOG: —É—Å–ª–æ–≤–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('üîç SmartTableOptimizer –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:', { // LOG: –±–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫
          —Å—Ç–∞—Ä–æ: previousDataRef.current.length,
          –Ω–æ–≤–æ–µ: deferredData.length,
          displayLimit,
        })
      }
    }

    if (!isReady) return []

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ - –ø–∞–≥–∏–Ω–∞—Ü–∏—è Ant Design —Å–∞–º–∞ —É–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    return deferredData
  }, [deferredData, displayLimit, chunkSize, isReady])

  // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø 2: –ì–ª—É–±–æ–∫–∞—è –º–µ–º–æ–∏–∑–∞—Ü–∏—è –∫–æ–ª–æ–Ω–æ–∫ —Å deferredEditingRows
  const optimizedColumns = useMemo(() => {
    const hasActiveEditing = Object.keys(deferredEditingRows).length > 0
    // –£–±—Ä–∞–Ω –∏–∑–±—ã—Ç–æ—á–Ω—ã–π –ª–æ–≥ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∫–æ–ª–æ–Ω–æ–∫

    // –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Ç–∫–ª—é—á–∞–µ–º render —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    if (hasActiveEditing) {
      // –†–µ–∂–∏–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
      return columns
    }

    if (!enableDeepMemo) {
      // –ü—Ä–æ—Å—Ç–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      if (!performanceMode) {
        return columns
      }
      return columns.map((col: any) => ({
        ...col,
        filters: undefined,
        filterDropdown: undefined,
        filterIcon: undefined,
        sorter: col.sorter === true ? true : false,
        render: ['actions', 'comments', 'checkbox'].includes(col.dataIndex) ? col.render : undefined,
      }))
    }

    // –ì–ª—É–±–æ–∫–∞—è –º–µ–º–æ–∏–∑–∞—Ü–∏—è - —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    return deepMemoColumns(columns, performanceMode)
  }, [columns, performanceMode, enableDeepMemo, deferredEditingRows])

  // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø 3: Intelligent shouldCellUpdate –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤
  const shouldCellUpdate = useCallback((record: any, prevRecord: any) => {
    // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–æ—á–Ω–æ–≥–æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞
    if (record === prevRecord) return false

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –≤–ª–∏—è—é—Ç –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const keyFields = ['id', 'material', 'quantityPd', 'quantitySpec', 'quantityRd', 'unit', 'updated_at']

    return keyFields.some(field => record[field] !== prevRecord[field])
  }, [])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 4: –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è rowKey (–±–µ–∑ deprecated index)
  const getRowKey = useCallback((record: any) => {
    return createStableRowKey(record)
  }, [])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 4: –£–º–Ω—ã–µ onRow handlers
  const optimizedOnRow = useCallback((record: any, index?: number) => {
    if (performanceMode) {
      // –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
      return {
        onClick: tableProps.onRow?.(record, index)?.onClick,
      }
    }
    return tableProps.onRow?.(record, index) || {}
  }, [performanceMode, tableProps.onRow])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 5: –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è scroll –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const scrollConfig = useMemo(() => {
    const baseScroll = tableProps.scroll || {}

    return {
      ...baseScroll,
      x: 'max-content',
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É —Å –Ω–µ–±–æ–ª—å—à–∏–º –∑–∞–ø–∞—Å–æ–º –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
      y: useAdaptiveHeight
        ? tableHeight.includes('max(')
          ? `calc(${tableHeight.split('max(')[1].split(',')[0]} - 30px)` // –æ—Ç—Å—Ç—É–ø –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
          : `calc(${tableHeight} - 30px)`
        : baseScroll.y || 'calc(100vh - 230px)',
    }
  }, [tableProps.scroll, useAdaptiveHeight, tableHeight])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 6: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º tableProps.pagination)
  const paginationConfig = useMemo(() => {
    // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é, –∏–≥–Ω–æ—Ä–∏—Ä—É—è tableProps.pagination

    const dataLength = limitedData.length

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ rowsPerPage –∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π fallback
    const defaultPageSize = rowsPerPage && rowsPerPage > 0 ? rowsPerPage : 100

    // –ò–∑–±—ã—Ç–æ—á–Ω—ã–µ –ª–æ–≥–∏ —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–±—Ä–∞–Ω—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

    return {
      total: dataLength, // –í–ê–ñ–ù–û: –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
      pageSize: defaultPageSize,
      showSizeChanger: true,
      pageSizeOptions: ['50', '100', '200', '500', '1000'],
      showQuickJumper: false, // —É–±–∏—Ä–∞–µ–º "Go to page"
      showTotal: (total: number, range: [number, number]) =>
        `${range[0]}-${range[1]} –∏–∑ ${total.toLocaleString('ru-RU')}`,
      size: 'small',
      onShowSizeChange: (_current: number, size: number) => {
        if (onRowsPerPageChange) {
          onRowsPerPageChange(size)
        }
      },
      onChange: (page: number, pageSize: number) => {
        // Pagination change handled
      },
      // –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º tableProps.pagination —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    }
  }, [limitedData.length, rowsPerPage, onRowsPerPageChange])

  // üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø 7: Performance Monitor –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ü–û–õ–ù–û–ì–û –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
  const renderStartTime = useRef<number>(0)
  const tableRef = useRef<HTMLDivElement>(null)

  React.useLayoutEffect(() => {
    renderStartTime.current = performance.now()
  })

  React.useEffect(() => {
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –¢–û–ß–ù–û–ï –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –ü–û–õ–ù–û–ô –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (limitedData.length > 0 && tableRef.current) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º IntersectionObserver –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting && entry.intersectionRatio > 0.9) {
              // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö –∑–∞–¥–∞—á
              setTimeout(() => {
                requestAnimationFrame(() => {
                  const renderTime = performance.now() - renderStartTime.current
                  if (renderTime > 50 && process.env.NODE_ENV === 'development') { // LOG: —É—Å–ª–æ–≤–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    console.warn(`‚ö†Ô∏è SmartTableOptimizer –†–ï–ê–õ–¨–ù–û–ï –≤—Ä–µ–º—è –¥–æ –ø–æ–ª–Ω–æ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏: ${Math.round(renderTime)}ms –¥–ª—è ${limitedData.length} —Å—Ç—Ä–æ–∫`) // LOG: —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–∞–±–ª–∏—Ü—ã
                  }
                  observer.disconnect()
                })
              }, 50) // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —É—á–µ—Ç–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
            }
          })
        },
        { threshold: 0.9 } // –ñ–¥–µ–º, –∫–æ–≥–¥–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å—Ç–∞–Ω–µ—Ç –Ω–∞ 90% –≤–∏–¥–∏–º–æ–π
      )

      observer.observe(tableRef.current)

      return () => observer.disconnect()
    }
  }, [limitedData.length])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 8: –î–µ—Ç–µ–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö —Å deferredData
  const hasDataChanged = useMemo(() => {
    const changed = previousDataRef.current.length !== deferredData.length ||
      previousDataRef.current.some((item, index) => item !== deferredData[index])

    if (changed) {
      previousDataRef.current = deferredData
    }

    return changed
  }, [deferredData])

  // –ü–æ–∫–∞–∑–∞—Ç—å loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å–ª–∏ lazy rendering –Ω–µ –≥–æ—Ç–æ–≤
  if (!isReady) {
    return (
      <Table
        {...tableProps}
        dataSource={[]}
        columns={optimizedColumns}
        loading={true}
        pagination={false}
      />
    )
  }

  // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ editingRows
  const editingRowsHash = useMemo(() => {
    const keys = Object.keys(editingRows).sort()
    // –°–æ–∑–¥–∞–µ–º —Ö—ç—à —Ç–æ–ª—å–∫–æ –∏–∑ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π –¥–ª—è Select –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–ü–û–õ–ù–´–ô –°–ü–ò–°–û–ö)
    const criticalFields = [
      // Select –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      'tagId', 'tagName', 'documentationId', 'projectCode', 'versionNumber',
      'unitId', 'blockId', 'block', 'costCategoryId', 'costTypeId',
      'locationId', 'rateId', 'materialId', 'material', 'nomenclatureId',
      'nomenclature', 'supplier',
      // Input –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
      'floors', 'quantityPd', 'quantitySpec', 'quantityRd'
    ]
    const values = keys.map(key => {
      const row = editingRows[key]
      const criticalValues = criticalFields.map(field => `${field}:${row[field] || ''}`).join(',')
      return `${key}:(${criticalValues})`
    }).join('|')

    return values || 'empty'
  }, [editingRows])

  return (
    <div ref={tableRef}> {/* –í–ê–ñ–ù–û: ref –¥–ª—è IntersectionObserver */}
      <Table
        {...tableProps}
        key={`table-${rowsPerPage}-${limitedData.length}`} // —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–æ–ª–ª–∞
        dataSource={limitedData}
        columns={optimizedColumns}
        rowKey={getRowKey}
        onRow={optimizedOnRow}
        scroll={scrollConfig}
        pagination={paginationConfig}
        size={performanceMode ? 'small' : tableProps.size}
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        sticky={performanceMode ? false : tableProps.sticky}
        showSorterTooltip={performanceMode ? false : tableProps.showSorterTooltip}
        locale={performanceMode ? { emptyText: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' } : tableProps.locale}
      />
    </div>
  )
}

// –ú–µ–º–æ–∏–∑–∞—Ü–∏—è —Å –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≥–ª—É–±–æ–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π editingRows
export default React.memo(SmartTableOptimizer, (prevProps, nextProps) => {
  // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  if (
    prevProps.displayLimit !== nextProps.displayLimit ||
    prevProps.performanceMode !== nextProps.performanceMode ||
    prevProps.enableDeepMemo !== nextProps.enableDeepMemo ||
    prevProps.chunkSize !== nextProps.chunkSize ||
    prevProps.lazyRendering !== nextProps.lazyRendering ||
    prevProps.useAdaptiveHeight !== nextProps.useAdaptiveHeight ||
    prevProps.controlsHeight !== nextProps.controlsHeight ||
    prevProps.rowsPerPage !== nextProps.rowsPerPage || // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    false // –£–±—Ä–∞–Ω–æ forceRerenderKey
  ) {
    return false
  }

  // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ì–ª—É–±–æ–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π editingRows
  const prevEditingRows = prevProps.editingRows || {}
  const nextEditingRows = nextProps.editingRows || {}
  const prevEditingKeys = Object.keys(prevEditingRows)
  const nextEditingKeys = Object.keys(nextEditingRows)

  if (prevEditingKeys.length !== nextEditingKeys.length) {
    return false
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –∫–ª—é—á–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö —Å—Ç—Ä–æ–∫
  if (prevEditingKeys.length > 0 || nextEditingKeys.length > 0) {
    const keysChanged = prevEditingKeys.some(key => !nextEditingKeys.includes(key)) ||
                       nextEditingKeys.some(key => !prevEditingKeys.includes(key))
    if (keysChanged) {
      return false
    }

    // –ù–û–í–û–ï: –ì–ª—É–±–æ–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π editingRows –¥–ª—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–ª—é—á–µ–π
    for (const key of prevEditingKeys) {
      const prevRow = prevEditingRows[key]
      const nextRow = nextEditingRows[key]

      if (!nextRow) continue // –∫–ª—é—á –∏—Å—á–µ–∑, —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—ã—à–µ

      // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –¥–ª—è Select –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–ü–û–õ–ù–´–ô –°–ü–ò–°–û–ö)
      const criticalFields = [
        // Select –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        'tagId', 'tagName', 'documentationId', 'projectCode', 'versionNumber',
        'unitId', 'blockId', 'block', 'costCategoryId', 'costTypeId',
        'locationId', 'rateId', 'materialId', 'material', 'nomenclatureId',
        'nomenclature', 'supplier',
        // Input –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        'floors', 'quantityPd', 'quantitySpec', 'quantityRd'
      ]
      for (const field of criticalFields) {
        if (prevRow[field] !== nextRow[field]) {
          return false
        }
      }
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö
  if (prevProps.data.length !== nextProps.data.length) {
    return false
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–ª–æ–Ω–æ–∫ –ø–æ –¥–ª–∏–Ω–µ
  if (prevProps.columns.length !== nextProps.columns.length) {
    return false
  }

  // –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  if (prevProps.data.length > 0 && nextProps.data.length > 0) {
    if (prevProps.data[0] !== nextProps.data[0]) {
      return false
    }
  }

  return true
})