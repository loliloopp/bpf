import React, { useMemo, useCallback, useState, useRef, useLayoutEffect } from 'react'
import { Table } from 'antd'
import { useTableHeight } from '../hooks/useTableHeight'

interface SmartTableOptimizerProps {
  data: any[]
  columns: any[]
  displayLimit: number
  performanceMode: boolean
  // –ù–æ–≤—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –≥–ª—É–±–æ–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
  enableDeepMemo?: boolean
  chunkSize?: number
  lazyRendering?: boolean
  // –û–ø—Ü–∏–∏ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≤—ã—Å–æ—Ç—ã —Ç–∞–±–ª–∏—Ü—ã
  useAdaptiveHeight?: boolean
  controlsHeight?: number
  // –ü—Ä–æ–ø—Å—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
  rowsPerPage?: number
  onRowsPerPageChange?: (value: number) => void
  [key: string]: any // –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã Table
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –∫–ª—é—á–∞ —Å—Ç—Ä–æ–∫–∏
const createStableRowKey = (() => {
  const keyCache = new WeakMap<any, string>()
  let keyCounter = 0

  return (record: any): string => {
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    if (record.key) return String(record.key)
    if (record.id) return String(record.id)

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
    if (keyCache.has(record)) {
      return keyCache.get(record)!
    }

    // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∫–ª—é—á –±–µ–∑ index
    const key = `row-${keyCounter++}-${Date.now()}`
    keyCache.set(record, key)
    return key
  }
})()

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
const deepMemoColumns = (() => {
  const columnsCache = new WeakMap<any[], any[]>()

  return (columns: any[], performanceMode: boolean): any[] => {
    if (!performanceMode) {
      if (columnsCache.has(columns)) {
        return columnsCache.get(columns)!
      }
      columnsCache.set(columns, columns)
      return columns
    }

    // –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É–ø—Ä–æ—â–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏
    const optimized = columns.map((col: any) => ({
      ...col,
      // –û—Ç–∫–ª—é—á–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
      filters: undefined,
      filterDropdown: undefined,
      filterIcon: undefined,
      // –£–ø—Ä–æ—â–∞–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤
      sorter: (col.sorter === true || typeof col.sorter === 'function') ? true : false,
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–Ω–¥–µ—Ä—ã
      render: (['actions', 'comments', 'checkbox'].includes(col.dataIndex) || col.key === 'actions')
        ? col.render
        : undefined,
    }))

    if (columnsCache.has(columns)) {
      const cached = columnsCache.get(columns)!
      // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–µ–∑ JSON.stringify –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫
      if (cached.length === optimized.length &&
          cached.every((col, i) => col.dataIndex === optimized[i]?.dataIndex &&
                                   col.title === optimized[i]?.title &&
                                   col.width === optimized[i]?.width)) {
        return cached
      }
    }

    columnsCache.set(columns, optimized)
    return optimized
  }
})()

const SmartTableOptimizer: React.FC<SmartTableOptimizerProps> = ({
  data,
  columns,
  displayLimit,
  performanceMode,
  enableDeepMemo = true,
  chunkSize = 50,
  lazyRendering = false,
  useAdaptiveHeight = true,
  controlsHeight = 56,
  rowsPerPage = 50,
  onRowsPerPageChange,
  ...tableProps
}) => {
  const [isReady, setIsReady] = useState(!lazyRendering)
  const previousDataRef = useRef<any[]>([])
  const frameRef = useRef<number>()

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –≤—ã—Å–æ—Ç—ã —Ç–∞–±–ª–∏—Ü—ã
  const { tableHeight } = useTableHeight({
    controlsHeight,
    minHeight: 300,
  })

  // Lazy rendering - –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useLayoutEffect(() => {
    if (lazyRendering && !isReady) {
      frameRef.current = requestAnimationFrame(() => {
        setIsReady(true)
      })
    }

    return () => {
      if (frameRef.current) {
        cancelAnimationFrame(frameRef.current)
      }
    }
  }, [lazyRendering, isReady])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 1: –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —á–∞–Ω–∫–∞–º–∏
  const limitedData = useMemo(() => {
    console.log('üîç SmartTableOptimizer limitedData:', {
      isReady,
      dataLength: data.length,
      displayLimit,
      chunkSize,
      calculatedLimit: chunkSize * 4
    })

    if (!isReady) return []

    if (displayLimit === -1) {
      // –£–±–∏—Ä–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞–Ω–∫–∞–º–∏ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
      // –ü–∞–≥–∏–Ω–∞—Ü–∏—è –≤ Table –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ —Å–∞–º–∞ —É–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      console.log('üîç Unlimited mode: returning all', data.length, 'rows')
      return data
    }

    console.log('üîç Limited mode: returning first', displayLimit, 'of', data.length, 'rows')
    return data.slice(0, displayLimit)
  }, [data, displayLimit, chunkSize, isReady])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 2: –ì–ª—É–±–æ–∫–∞—è –º–µ–º–æ–∏–∑–∞—Ü–∏—è –∫–æ–ª–æ–Ω–æ–∫
  const optimizedColumns = useMemo(() => {
    if (!enableDeepMemo) {
      // –ü—Ä–æ—Å—Ç–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
      if (!performanceMode) return columns
      return columns.map((col: any) => ({
        ...col,
        filters: undefined,
        filterDropdown: undefined,
        filterIcon: undefined,
        sorter: col.sorter === true ? true : false,
        render: ['actions', 'comments', 'checkbox'].includes(col.dataIndex) ? col.render : undefined,
      }))
    }

    // –ì–ª—É–±–æ–∫–∞—è –º–µ–º–æ–∏–∑–∞—Ü–∏—è
    return deepMemoColumns(columns, performanceMode)
  }, [columns, performanceMode, enableDeepMemo])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 3: –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è rowKey (–±–µ–∑ deprecated index)
  const getRowKey = useCallback((record: any) => {
    return createStableRowKey(record)
  }, [])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 4: –£–º–Ω—ã–µ onRow handlers
  const optimizedOnRow = useCallback((record: any, index?: number) => {
    if (performanceMode) {
      // –í —Ä–µ–∂–∏–º–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è
      return {
        onClick: tableProps.onRow?.(record, index)?.onClick,
      }
    }
    return tableProps.onRow?.(record, index) || {}
  }, [performanceMode, tableProps.onRow])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 5: –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è scroll –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const scrollConfig = useMemo(() => {
    const baseScroll = tableProps.scroll || {}

    return {
      ...baseScroll,
      x: 'max-content',
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—É—é –≤—ã—Å–æ—Ç—É —Å –Ω–µ–±–æ–ª—å—à–∏–º –∑–∞–ø–∞—Å–æ–º –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
      y: useAdaptiveHeight
        ? tableHeight.includes('max(')
          ? `calc(${tableHeight.split('max(')[1].split(',')[0]} - 30px)` // –æ—Ç—Å—Ç—É–ø –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
          : `calc(${tableHeight} - 30px)`
        : baseScroll.y || 'calc(100vh - 230px)',
    }
  }, [tableProps.scroll, useAdaptiveHeight, tableHeight])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 6: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º tableProps.pagination)
  const paginationConfig = useMemo(() => {
    // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é, –∏–≥–Ω–æ—Ä–∏—Ä—É—è tableProps.pagination

    const dataLength = limitedData.length

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ rowsPerPage –∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π fallback
    const defaultPageSize = rowsPerPage && rowsPerPage > 0 ? rowsPerPage : 100

    console.log('üîç SmartTableOptimizer paginationConfig:', {
      dataLength,
      rowsPerPage,
      rowsPerPageType: typeof rowsPerPage,
      rowsPerPageValid: rowsPerPage && rowsPerPage > 0,
      defaultPageSize,
      onRowsPerPageChangeExists: !!onRowsPerPageChange
    })

    return {
      pageSize: defaultPageSize,
      showSizeChanger: true,
      pageSizeOptions: ['50', '100', '200', '500', '1000'],
      showQuickJumper: false, // —É–±–∏—Ä–∞–µ–º "Go to page"
      showTotal: (total: number, range: [number, number]) =>
        `${range[0]}-${range[1]} –∏–∑ ${total.toLocaleString('ru-RU')}`,
      size: 'small',
      onShowSizeChange: (_current: number, size: number) => {
        console.log('üîç onShowSizeChange triggered:', { size, onRowsPerPageChangeExists: !!onRowsPerPageChange })
        if (onRowsPerPageChange) {
          onRowsPerPageChange(size)
        }
      },
      onChange: (page: number, pageSize: number) => {
        console.log('üîç onChange triggered:', { page, pageSize })
      },
      // –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º tableProps.pagination —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    }
  }, [limitedData.length, rowsPerPage, onRowsPerPageChange])

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è 7: –î–µ—Ç–µ–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö
  const hasDataChanged = useMemo(() => {
    const changed = previousDataRef.current.length !== data.length ||
      previousDataRef.current.some((item, index) => item !== data[index])

    if (changed) {
      previousDataRef.current = data
    }

    return changed
  }, [data])

  // –ü–æ–∫–∞–∑–∞—Ç—å loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å–ª–∏ lazy rendering –Ω–µ –≥–æ—Ç–æ–≤
  if (!isReady) {
    return (
      <Table
        {...tableProps}
        dataSource={[]}
        columns={optimizedColumns}
        loading={true}
        pagination={false}
      />
    )
  }

  return (
    <Table
      {...tableProps}
      key={`table-${rowsPerPage}-${limitedData.length}`} // –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ rowsPerPage
      dataSource={limitedData}
      columns={optimizedColumns}
      rowKey={getRowKey}
      onRow={optimizedOnRow}
      scroll={scrollConfig}
      pagination={paginationConfig}
      size={performanceMode ? 'small' : tableProps.size}
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      sticky={performanceMode ? false : tableProps.sticky}
      showSorterTooltip={performanceMode ? false : tableProps.showSorterTooltip}
      locale={performanceMode ? { emptyText: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö' } : tableProps.locale}
    />
  )
}

// –ú–µ–º–æ–∏–∑–∞—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≥–ª—É–±–æ–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
export default React.memo(SmartTableOptimizer, (prevProps, nextProps) => {
  // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  if (
    prevProps.displayLimit !== nextProps.displayLimit ||
    prevProps.performanceMode !== nextProps.performanceMode ||
    prevProps.enableDeepMemo !== nextProps.enableDeepMemo ||
    prevProps.chunkSize !== nextProps.chunkSize ||
    prevProps.lazyRendering !== nextProps.lazyRendering ||
    prevProps.useAdaptiveHeight !== nextProps.useAdaptiveHeight ||
    prevProps.controlsHeight !== nextProps.controlsHeight ||
    prevProps.rowsPerPage !== nextProps.rowsPerPage // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  ) {
    return false
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö
  if (prevProps.data.length !== nextProps.data.length) {
    return false
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–ª–æ–Ω–æ–∫ –ø–æ –¥–ª–∏–Ω–µ
  if (prevProps.columns.length !== nextProps.columns.length) {
    return false
  }

  // –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  if (prevProps.data.length > 0 && nextProps.data.length > 0) {
    if (prevProps.data[0] !== nextProps.data[0]) {
      return false
    }
  }

  return true
})