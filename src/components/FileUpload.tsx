import { useState } from 'react'
import { Upload, Button, Space, Typography, Tooltip, App } from 'antd'
import { UploadOutlined, FileExcelOutlined, FileWordOutlined, FilePdfOutlined, FileOutlined, DeleteOutlined } from '@ant-design/icons'
import type { UploadProps } from 'antd/es/upload'
import type { LocalFile } from '@/entities/documentation'

const { Text } = Typography

interface FileUploadProps {
  files: LocalFile[]
  onChange: (files: LocalFile[]) => void
  disabled?: boolean
  projectId: string
  documentationCode: string
  onlineFileUrl?: string
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ñ–∞–π–ª–∞
const getFileIcon = (extension: string) => {
  const ext = extension.toLowerCase()
  switch (ext) {
    case 'xlsx':
    case 'xls':
      return <FileExcelOutlined style={{ color: '#1D6F42', fontSize: 16 }} />
    case 'docx':
    case 'doc':
      return <FileWordOutlined style={{ color: '#2B579A', fontSize: 16 }} />
    case 'pdf':
      return <FilePdfOutlined style={{ color: '#FF6B6B', fontSize: 16 }} />
    case 'dwg':
      return <FileOutlined style={{ color: '#FF9500', fontSize: 16 }} />
    default:
      return <FileOutlined style={{ color: '#666', fontSize: 16 }} />
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
const getFileColor = (extension: string) => {
  const ext = extension.toLowerCase()
  switch (ext) {
    case 'xlsx':
    case 'xls':
      return '#E8F5E8'
    case 'docx':
    case 'doc':
      return '#E8F0FF'
    case 'pdf':
      return '#FFE8E8'
    case 'dwg':
      return '#FFF2E8'
    default:
      return '#F5F5F5'
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—ã–µ —Å–ª—ç—à–∏ –¥–ª—è –≤–µ–±)
const createFilePath = (projectId: string, documentationCode: string, fileName: string): string => {
  return `./Documentation/${projectId}/${documentationCode}/${fileName}`
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –ª–æ–∫–∞–ª—å–Ω–æ –≤ –ø–∞–ø–∫—É public
const saveFileLocally = async (file: File, filePath: string, projectId: string, documentationCode: string): Promise<string> => {
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—á–µ—Ä–µ–∑ API –∏–ª–∏ mock)
    const fullPath = `public${filePath}`
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ–ª—å–∑—è –Ω–∞–ø—Ä—è–º—É—é –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
    // –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–æ–∑–¥–∞–Ω–∏–µ blob URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É
    const arrayBuffer = await file.arrayBuffer()
    const blob = new Blob([arrayBuffer], { type: file.type })
    const blobUrl = URL.createObjectURL(blob)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º blob URL –≤ sessionStorage –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
    const fileKey = `file_${projectId}_${documentationCode}_${file.name}`
    sessionStorage.setItem(fileKey, blobUrl)
    
    console.log(`‚úÖ File ${file.name} saved to ${fullPath}`)
    console.log(`üìÅ Local path: C:\\Users\\eugene\\WebstormProjects\\blueprintflow\\public${filePath}`)
    console.log(`üîó Blob URL stored in session: ${blobUrl}`)
    
    return fullPath
  } catch (error) {
    console.error('‚ùå Error saving file:', error)
    throw error
  }
}

export default function FileUpload({ files, onChange, disabled, projectId, documentationCode, onlineFileUrl }: FileUploadProps) {
  const [uploading, setUploading] = useState(false)
  const { modal, message } = App.useApp()

  const handleUpload: UploadProps['customRequest'] = async (options) => {
    const { file, onSuccess, onError } = options
    
    if (!(file instanceof File)) {
      onError?.(new Error('Invalid file'))
      return
    }

    setUploading(true)

    try {
      const extension = file.name.split('.').pop() || ''
      const filePath = createFilePath(projectId, documentationCode, file.name)

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –ª–æ–∫–∞–ª—å–Ω–æ –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å
      const savedPath = await saveFileLocally(file, filePath, projectId, documentationCode)

      // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç LocalFile —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      const newFile: LocalFile = {
        name: file.name,
        path: savedPath, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
        size: file.size,
        type: file.type,
        extension,
        uploadedAt: new Date().toISOString(),
      }

      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º
      const updatedFiles = [...files, newFile]
      onChange(updatedFiles)

      onSuccess?.(null, file as any)
      
      console.log(`üéâ Upload completed successfully:`, {
        fileName: file.name,
        localPath: `C:\\Users\\eugene\\WebstormProjects\\blueprintflow\\${savedPath}`,
        size: `${(file.size / 1024 / 1024).toFixed(2)} MB`
      })
    } catch (error) {
      console.error('‚ùå Error uploading file:', error)
      onError?.(error as Error)
    } finally {
      setUploading(false)
    }
  }

  const handleRemoveFile = (fileToRemove: LocalFile) => {
    modal.confirm({
      title: '–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª?',
      content: `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª "${fileToRemove.name}"?`,
      okText: '–£–¥–∞–ª–∏—Ç—å',
      cancelText: '–û—Ç–º–µ–Ω–∞',
      okButtonProps: { danger: true },
      onOk: async () => {
        try {
          const updatedFiles = files.filter(f => f.path !== fileToRemove.path)
          // –í—ã–∑—ã–≤–∞–µ–º onChange –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ
          await onChange(updatedFiles)
          
          // –£–¥–∞–ª—è–µ–º blob URL –∏–∑ sessionStorage
          const fileKey = `file_${projectId}_${documentationCode}_${fileToRemove.name}`
          const blobUrl = sessionStorage.getItem(fileKey)
          if (blobUrl) {
            URL.revokeObjectURL(blobUrl)
            sessionStorage.removeItem(fileKey)
          }
          
          message.success(`–§–∞–π–ª "${fileToRemove.name}" —É–¥–∞–ª–µ–Ω`)
          console.log(`üóëÔ∏è File removed: ${fileToRemove.name}`)
        } catch (error) {
          console.error('‚ùå Error removing file:', error)
          message.error('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª')
        }
      }
    })
  }

  const openFile = (file: LocalFile) => {
    console.log('üìÇ Opening file:', file.path)
    console.log('üìç Full local path:', `C:\\Users\\eugene\\WebstormProjects\\blueprintflow\\${file.path}`)
    
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å blob URL –∏–∑ sessionStorage
      const fileKey = `file_${projectId}_${documentationCode}_${file.name}`
      const blobUrl = sessionStorage.getItem(fileKey)
      
      if (blobUrl) {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ blob URL –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
        const link = document.createElement('a')
        link.href = blobUrl
        link.download = file.name
        link.target = '_blank'
        document.body.appendChild(link)
        link.click()
        document.body.removeChild(link)
        
        console.log(`üöÄ File opened via blob URL: ${file.name}`)
      } else {
        // –ï—Å–ª–∏ blob URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞–ª—å–Ω–æ–º –ø—É—Ç–∏
        modal.info({
          title: '–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞',
          content: (
            <div>
              <p><strong>–§–∞–π–ª:</strong> {file.name}</p>
              <p><strong>–†–∞–∑–º–µ—Ä:</strong> {(file.size / 1024 / 1024).toFixed(2)} –ú–ë</p>
              <p><strong>–õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å:</strong></p>
              <code style={{ 
                background: '#f5f5f5', 
                padding: '4px 8px', 
                borderRadius: '4px',
                display: 'block',
                marginTop: '8px',
                wordBreak: 'break-all'
              }}>
                C:\Users\eugene\WebstormProjects\blueprintflow\{file.path}
              </code>
              <p style={{ marginTop: '12px', color: '#666' }}>
                –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ. –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏.
              </p>
            </div>
          ),
          width: 600,
          okText: 'OK'
        })
        
        console.log(`‚ÑπÔ∏è  File location shown: ${file.name}`)
      }
    } catch (error) {
      console.error('‚ùå Error opening file:', error)
      modal.error({
        title: '–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞',
        content: `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª ${file.name}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å: ${file.path}`,
        okText: 'OK'
      })
    }
  }

  return (
    <Space direction="vertical" style={{ width: '100%' }}>
      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
      <Upload
        customRequest={handleUpload}
        showUploadList={false}
        accept=".xlsx,.xls,.docx,.doc,.pdf,.dwg"
        disabled={disabled || uploading}
      >
        <Button icon={<UploadOutlined />} loading={uploading} disabled={disabled}>
          –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã
        </Button>
      </Upload>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ */}
      {files.length > 0 && (
        <Space wrap size={[8, 8]}>
          {files.map((file, index) => (
            <div
              key={index}
              style={{
                display: 'flex',
                alignItems: 'center',
                padding: '4px 8px',
                backgroundColor: getFileColor(file.extension),
                borderRadius: '6px',
                border: '1px solid #d9d9d9',
                cursor: 'pointer',
                minWidth: 'fit-content'
              }}
              onClick={() => openFile(file)}
            >
              <Space size={4}>
                {getFileIcon(file.extension)}
                <Tooltip title={`${file.name} (${(file.size / 1024).toFixed(1)} KB)`}>
                  <Text 
                    style={{ 
                      fontSize: '12px', 
                      maxWidth: '100px',
                      overflow: 'hidden',
                      textOverflow: 'ellipsis',
                      whiteSpace: 'nowrap'
                    }}
                  >
                    {file.name}
                  </Text>
                </Tooltip>
                {!disabled && (
                  <Button
                    type="text"
                    size="small"
                    icon={<DeleteOutlined />}
                    onClick={(e) => {
                      e.stopPropagation()
                      handleRemoveFile(file)
                    }}
                    style={{ 
                      minWidth: 'auto',
                      width: '20px',
                      height: '20px',
                      padding: 0,
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center'
                    }}
                  />
                )}
              </Space>
            </div>
          ))}
        </Space>
      )}

      {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–Ω–ª–∞–π–Ω –¥–æ–∫—É–º–µ–Ω—Ç */}
      {onlineFileUrl && (
        <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
          <Text>–û–Ω–ª–∞–π–Ω –¥–æ–∫—É–º–µ–Ω—Ç:</Text>
          <Button 
            type="link" 
            size="small"
            onClick={() => window.open(onlineFileUrl, '_blank')}
          >
            –û—Ç–∫—Ä—ã—Ç—å
          </Button>
        </div>
      )}
    </Space>
  )
}