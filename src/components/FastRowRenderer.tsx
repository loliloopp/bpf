import React, { memo, useMemo } from 'react'
import MemoizedTableCell from './MemoizedTableCell'

interface FastRowRendererProps {
  record: any
  columns: any[]
  index: number
  editingRows: Record<string, any>
  onEdit?: (field: string, value: any) => void
  onOpenComments?: (rowKey: string) => void
  performanceMode?: boolean
}

// üöÄ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–µ—Ä —Å—Ç—Ä–æ–∫ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤
const FastRowRenderer: React.FC<FastRowRendererProps> = memo(
  ({ record, columns, index, editingRows, onEdit, onOpenComments, performanceMode = false }) => {
    const isEditing = useMemo(() => !!editingRows[record.key], [editingRows, record.key])

    const renderedCells = useMemo(() => {
      return columns.map((column) => {
        const value = record[column.dataIndex]

        return (
          <MemoizedTableCell
            key={`cell-${record.key}-${column.dataIndex}`}
            value={value}
            record={record}
            column={column}
            isEditing={isEditing}
            onEdit={onEdit}
            onOpenComments={onOpenComments}
            performanceMode={performanceMode}
          />
        )
      })
    }, [record, columns, isEditing, onEdit, onOpenComments, performanceMode])

    return <>{renderedCells}</>
  },
  (prevProps, nextProps) => {
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–ª—è —Å—Ç—Ä–æ–∫–∏
    if (
      prevProps.record !== nextProps.record ||
      prevProps.index !== nextProps.index ||
      prevProps.performanceMode !== nextProps.performanceMode ||
      prevProps.columns.length !== nextProps.columns.length
    ) {
      return false
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
    const prevEditing = !!prevProps.editingRows[prevProps.record.key]
    const nextEditing = !!nextProps.editingRows[nextProps.record.key]

    if (prevEditing !== nextEditing) {
      return false
    }

    // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (nextEditing) {
      const prevEditData = prevProps.editingRows[prevProps.record.key]
      const nextEditData = nextProps.editingRows[nextProps.record.key]

      if (JSON.stringify(prevEditData) !== JSON.stringify(nextEditData)) {
        return false
      }
    }

    return true
  },
)

FastRowRenderer.displayName = 'FastRowRenderer'

export default FastRowRenderer